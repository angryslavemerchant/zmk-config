#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
    // Define custom wheel scaler
    input_processors {
        zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };
    };

    behaviors {
        scroll: scroll_control {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            tap-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Layer 0: Slow (1x)
        default_layer {
            display-name = "Slow";
            bindings = <&to 1>;
            sensor-bindings = <&scroll>;
        };
        
        // Layer 1: Normal (2x)
        normal_layer {
            display-name = "Normal";
            bindings = <&to 2>;
            sensor-bindings = <&scroll>;
        };
        
        // Layer 2: Fast (4x)
        fast_layer {
            display-name = "Fast";
            bindings = <&to 3>;
            sensor-bindings = <&scroll>;
        };
        
        // Layer 3: Turbo (8x)
        turbo_layer {
            display-name = "Turbo";
            bindings = <&to 0>;
            sensor-bindings = <&scroll>;
        };
    };
};

// Apply layer-specific scalers (must be outside root node)
&msc_input_listener {
    // Layer 1: 2x speed
    normal {
        layers = <1>;
        input-processors = <&zip_wheel_scaler 2 1>;
    };
    
    // Layer 2: 4x speed
    fast {
        layers = <2>;
        input-processors = <&zip_wheel_scaler 4 1>;
    };
    
    // Layer 3: 8x speed
    turbo {
        layers = <3>;
        input-processors = <&zip_wheel_scaler 8 1>;
    };
};
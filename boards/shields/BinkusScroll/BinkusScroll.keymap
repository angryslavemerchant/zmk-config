#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

#include <dt-bindings/zmk/pointing.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
    behaviors {
        /* Separate behaviors per layer, no input processors */
        scroll_slow: scroll_slow {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc MOVE_Y(30)>, <&msc MOVE_Y(-30)>;   /* ~fine */
            tap-ms = <35>;
        };

        scroll_normal: scroll_normal {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc MOVE_Y(50)>, <&msc MOVE_Y(-50)>;   /* default-ish */
            tap-ms = <35>;
        };

        scroll_fast: scroll_fast {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc MOVE_Y(80)>, <&msc MOVE_Y(-80)>;   /* quick */
            tap-ms = <35>;
        };

        scroll_turbo: scroll_turbo {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc MOVE_Y(140)>, <&msc MOVE_Y(-140)>; /* spicy */
            tap-ms = <35>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* Layer 0 → Layer 1 */
        default_layer {
            display-name = "Slow";
            bindings = <&to 1>;
            sensor-bindings = <&scroll_slow>;
        };

        /* Layer 1 → Layer 2 */
        normal_layer {
            display-name = "Normal";
            bindings = <&to 2>;
            sensor-bindings = <&scroll_normal>;
        };

        /* Layer 2 → Layer 3 */
        fast_layer {
            display-name = "Fast";
            bindings = <&to 3>;
            sensor-bindings = <&scroll_fast>;
        };

        /* Layer 3 → Layer 0 */
        turbo_layer {
            display-name = "Turbo";
            bindings = <&to 0>;
            sensor-bindings = <&scroll_turbo>;
        };
    };
};
